{"ast":null,"code":"var _jsxFileName = \"/Users/cappabarra/Documents/GitHub/hack-the-hill-2024/brainupFrontend/src/form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport ProgressBar from \"./progressbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const navigate = useNavigate();\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [isFormVisible, setIsFormVisible] = useState(true);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: acceptedFiles => {\n      setUploadedFiles(acceptedFiles);\n    }\n  });\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    setIsFormVisible(false);\n\n    // // send get request to server with text and uploaded files\n    // const formData = new FormData();\n    // formData.append(\"text\", text);\n    // uploadedFiles.forEach((file) => {\n    //   formData.append(\"files\", file);\n    // });\n\n    // const xhr = new XMLHttpRequest();\n    // xhr.open(\"POST\", \"http://localhost:8000/upload\", true);\n\n    // xhr.upload.onprogress = (progressEvent) => {\n    //   const percentCompleted = Math.round(\n    //     (progressEvent.loaded * 100) / progressEvent.total\n    //   );\n    //   setProgress(percentCompleted);\n    // };\n\n    // xhr.onload = () => {\n    //   if (xhr.status === 200) {\n    //     const response = JSON.parse(xhr.responseText);\n    //     console.log(response);\n    //     setIsLoading(false);\n    //   } else {\n    //     console.error(\"Error:\", xhr.statusText);\n    //     setIsLoading(false);\n    //   }\n    // };\n\n    // xhr.onerror = () => {\n    //   console.error(\"Error:\", xhr.statusText);\n    //   setIsLoading(false);\n    // };\n\n    // xhr.send(formData);\n\n    navigate(\"/results\", {\n      state: {\n        processedData: uploadedFiles\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your city\",\n          name: \"locationInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"brainrot-msg\",\n          children: \"Upload your brainrot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a file or drop it here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: file.path\n          }, file.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        children: \"Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"2UcZYCl4UTFJOd6+1rInj1Mxopc=\", false, function () {\n  return [useNavigate, useDropzone];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useDropzone","ProgressBar","useNavigate","jsxDEV","_jsxDEV","FileUpload","_s","navigate","uploadedFiles","setUploadedFiles","text","setText","isLoading","setIsLoading","progress","setProgress","isFormVisible","setIsFormVisible","getRootProps","getInputProps","onDrop","acceptedFiles","handleSubmit","event","preventDefault","state","processedData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","name","map","file","path","_c","$RefreshReg$"],"sources":["/Users/cappabarra/Documents/GitHub/hack-the-hill-2024/brainupFrontend/src/form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport ProgressBar from \"./progressbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./form.css\";\n\nconst FileUpload = () => {\n  const navigate = useNavigate();\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [isFormVisible, setIsFormVisible] = useState(true);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: (acceptedFiles) => {\n      setUploadedFiles(acceptedFiles);\n    },\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    setIsFormVisible(false);\n\n    // // send get request to server with text and uploaded files\n    // const formData = new FormData();\n    // formData.append(\"text\", text);\n    // uploadedFiles.forEach((file) => {\n    //   formData.append(\"files\", file);\n    // });\n\n    // const xhr = new XMLHttpRequest();\n    // xhr.open(\"POST\", \"http://localhost:8000/upload\", true);\n\n    // xhr.upload.onprogress = (progressEvent) => {\n    //   const percentCompleted = Math.round(\n    //     (progressEvent.loaded * 100) / progressEvent.total\n    //   );\n    //   setProgress(percentCompleted);\n    // };\n\n    // xhr.onload = () => {\n    //   if (xhr.status === 200) {\n    //     const response = JSON.parse(xhr.responseText);\n    //     console.log(response);\n    //     setIsLoading(false);\n    //   } else {\n    //     console.error(\"Error:\", xhr.statusText);\n    //     setIsLoading(false);\n    //   }\n    // };\n\n    // xhr.onerror = () => {\n    //   console.error(\"Error:\", xhr.statusText);\n    //   setIsLoading(false);\n    // };\n\n    // xhr.send(formData);\n\n    navigate(\"/results\", { state: { processedData: uploadedFiles } });\n  };\n  return (\n    <div className=\"form-container\">\n      {isLoading && <ProgressBar progress={progress} />}\n      {isFormVisible && (\n        <form onSubmit={handleSubmit}>\n          <div className=\"text-input\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter your city\"\n              name=\"locationInput\"\n            />\n          </div>\n          <div {...getRootProps()} className=\"file-upload\">\n            <input {...getInputProps()} />\n            <p className=\"brainrot-msg\">Upload your brainrot</p>\n            <p>Choose a file or drop it here</p>\n            <ul>\n              {uploadedFiles.map((file) => (\n                <li key={file.path}>{file.path}</li>\n              ))}\n            </ul>\n          </div>\n          <button type=\"submit\" className=\"submit\">\n            Go\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}